<html>
    <head>
        <title>EmpreendeKit</title>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

        <link rel="stylesheet" type="text/css" href="/css/www.css" />
        <link rel="stylesheet" type="text/css" href="/css/images.css" />
        <link rel="stylesheet" type="text/css" href="/css/colors.css" />

        <script type="text/javascript" src="/js/class.min.js"></script>
        <script type="text/javascript" src="/js/ajax.min.js"></script>
        <script type="text/javascript" src="/js/namespace.min.js"></script>
        <script src="http://<%=config.services.kamisama.url%>:<%=config.services.kamisama.port%>/socket.io/socket.io.js"></script>
    </head>
    <body>
        <script type="text/javascript">

            function clearToken () {
                document.cookie='token=;expires=Thu, 01 Jan 1970 00:00:00 GMT';
            }

            function setToken (token, remindme) {
                var exdate=new Date();
                if (remindme) {
                    exdate.setDate(exdate.getDate() + 30);
                } else {
                    exdate.setDate(exdate.getDate() + 2);
                }
                var c_value=escape(token) + "; expires="+exdate.toUTCString();
                document.cookie="token=" + c_value;
            }

            function getToken () {
                var c_value = document.cookie;
                var c_start = c_value.indexOf(" token=");
                if (c_start == -1) {
                    c_start = c_value.indexOf("token=");
                }
                if (c_start == -1) {
                    c_value = null;
                } else {
                    c_start = c_value.indexOf("=", c_start) + 1;
                    var c_end = c_value.indexOf(";", c_start);
                    if (c_end == -1) {
                        c_end = c_value.length;
                    }
                    c_value = unescape(c_value.substring(c_start,c_end));
                }
                return c_value;
            }

            var folder = '/js/',
                auth = '<%=config.services.auth.url%>:<%=config.services.auth.port%>';

            var Error = new Class(function (params) {
                console.log(params);
            });

            var Empreendekit = new Namespace({
                config  : folder + 'configuration/configuration.js',
                ajax    : folder + 'ajax/ajax.js',
                app     : folder + 'app/app.js',
                auth    : folder + 'auth/auth.js',
                path    : folder + 'path/path.js',
                ui      : folder + 'ui/ui.js'
            }, function () {
                /* Comunicação com o kami-sama */
                Empreendekit.socket = io.connect('http://' + this.config.services.kamisama.host + ':' + this.config.services.kamisama.port),
                    self = this;
                Empreendekit.socket.on('trigger', function (evt) {
                    var apps = self.ui.apps.get();
                    for (var i in apps) {
                        apps[i].context().trigger(evt.label, evt.data);
                        if (apps[i].context().ui.embeds) {
                            var embeds = apps[i].context().ui.embeds.get();
                            for (var j in embeds) {
                                embeds[j].context().trigger(evt.label, evt.data);
                            }
                        }
                    }
                });
                this.auth.user.validate();

                /* Abre o app da rota ou a home*/
                var app =  location.pathname.match(/^\/([^\/]+)/) || [],
                    route = location.pathname.match(/^\/[^\/]+(.*)/) || [];

                this.path.redirect((app[1] || 'ee') + (route[1] || '/'));

                /* Exibe lista de apps no menu do usuário */
                for (var i in this.config.apps) {
                    if (this.config.apps[i].slug !== 'ee') {
                        this.ui.menu.add(new this.ui.appIcon({
                            legend : this.config.apps[i].name,
                            image  : this.config.apps[i].slug,
                            href   : this.config.apps[i].slug
                        }))
                    }
                }

            });
        </script>
    </body>
</html>